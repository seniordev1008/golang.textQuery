.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "TEXTQL" "1" "December 2015" "" ""
.
.SH "NAME"
\fBtextql\fR \- execute queries on structured text
.
.SH "SYNOPSIS"
\fBtextql\fR [\fI\-save\-to path\fR] [\fI\-output\-file path\fR] [\fI\-output\-dlm delimter\fR] [\fI\-output\-header\fR] [\fI\-header\fR] [\fI\-dlm delimter\fR] [\fI\-source path\fR] [\fI\-sql sql_statements\fR] [\fI\-quiet\fR] [\fIpath\fR\.\.\.]
.
.br
\fBtextql\fR \fI\-console\fR \fIpath\fR\.\.\.
.
.br
.
.SH "DESCRIPTION"
\fBtextql\fR executes given statements in SQL on structured texts and returns the result\. SQL statements accepted by \fBtextql\fR are ANSI SQL compatible, and are executed against the data in the order provided\. No transformations are applied to the text files but are instead applied to a temporary view of the data\. Statements that insert data or modify the existing data will only have their effects visible in the output\.
.
.P
The argument list of the end is expected to be a list of paths which may or may not be specific files\. Each path is traversed for files that are then loaded as part of the database that \fBtextql\fR creates internally, and files are loaded without traversal\. Paths provided are not recursed\.
.
.P
Each statement is then executed against \fBtextql\fR\'s internal database and the result, if any, is printed\. \fBINSERT\fR, \fBUPDATE\fR, \fBDELETE\fR or other side effecting statements do not effect the text files given as input, but instead modify the database internal to \fBtextql\fR\. Their result may be viewed via the output, presisting the database as is with \fB\-save\-to\fR or in a SQLite REPL with \fB\-\-console\fR
.
.P
With no arguements, \fBtextql\fR will print a brief overview of it\'s usage\.
.
.SH "FILES"
Structured text accepted by textql is any text file in a tabular format where each row of the table is on a single line, and each column is a section of the line delimited by a single character which is consistent throughout the file\. A common structured text format is CSV (RFC4180)\.
.
.SH "OPTIONS"
.
.TP
\fB\-console\fR
After all statements are run, open SQLite3 REPL with this data
.
.TP
\fB\-dlm string\fR
Input delimiter character between fields \-dlm=tab for tab, \-dlm=0x## to specify a character code in hex (default ",")
.
.TP
\fB\-header\fR
Treat input files as having the first row as a header row
.
.TP
\fB\-output\-dlm string\fR
Output delimiter character between fields \-output\-dlm=tab for tab, \-dlm=0x## to specify a character code in hex (default ",")
.
.TP
\fB\-output\-file file\fR
Filename to write output to, if empty no output is written (default "stdout")
.
.TP
\fB\-output\-header\fR
Display column names in output
.
.TP
\fB\-quiet\fR
Surpress logging
.
.TP
\fB\-pretty\fR
Pretty print output
.
.TP
\fB\-save\-to file\fR
SQLite3 db is left on disk at this file
.
.TP
\fB\-sql string\fR
SQL Statement(s) to run on the data
.
.TP
\fB\-version\fR
Print version and exit
.
.SH "COPYRIGHT"
textql is Copyright (C) 2015, 2016 Paul Bergeron \fIhttp://pauldbergeron\.com/\fR
